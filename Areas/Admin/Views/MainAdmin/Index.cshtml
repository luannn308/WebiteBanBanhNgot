@using WebsiteCakeNew.Models.BUS
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script>
</head>

<div class="content-header" style="background-color: #fcfcfc">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0"><strong>Tổng quan và thống kê</strong></h1>
            </div>
        </div>
    </div>
</div>
<section class="content" style="background-color: #fcfcfc" >
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@OrderBUS.CountOrder()</h3>
                        <p>Đơn hàng</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-receipt"></i>
                    </div>
                    <a href="@Url.Action("Index","OrderManager")" class="small-box-footer">Xem danh sách chi tiết đơn hàng  <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@UserBUS.CountUser()</h3>
                        <p>Khách hàng</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-user"></i>
                    </div>
                    <a href="@Url.Action("Index","UserManager")" class="small-box-footer">Xem danh sách người dùng <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>@ShopBUS.CountProduct()</h3>

                        <p>Sản phẩm</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-birthday-cake"></i>
                    </div>
                    <a href="@Url.Action("Index","ProductManager")" class="small-box-footer">Xem danh sách sản phẩm <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3>@string.Format("{0:N0}", OrderBUS.SumAllOrderTotal()) VNĐ</h3>
                        <p>Tổng doanh thu</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="@Url.Action("Index","OrderManager", new { sortBy = "Giao hàng thành công"})" class="small-box-footer">Xem danh sách đơn thành công <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
        </div>
        <div class="row">
            <!-- Left col -->
            <section class="col-lg-12 connectedSortable">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title" style="font-weight:bold; text-transform:uppercase">Thống Kê Doanh Thu Theo Sản Phẩm</h3>
                    </div>
                    <div class="card-body">
                        <div>
                            <div class="d-flex flex-row align-items-center justify-content-between" style="gap:24px; margin-bottom: 24px">
                                <div class="d-flex flex-row align-items-center" style="gap:24px;">
                                    <div class="d-flex flex-row align-items-center" style="gap:8px;">
                                        <label style="margin-bottom: 0px;text-wrap: nowrap;" for="year">Năm:</label>
                                        <select id="year" name="year" class="form-control" style="border-color: #939393 ">
                                            <option value="">Chọn năm</option>
                                            @{
                                                int currentYear = DateTime.Now.Year;
                                                for (int year = currentYear; year >= (currentYear - 10); year--)
                                                {
                                                    <option value="@year">@year</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="d-flex flex-row align-items-center" style="gap:8px;">
                                        <label style="margin-bottom: 0px;text-wrap: nowrap;" for="quy">Quý:</label>
                                        <select id="quy" name="quy" class="form-control" style="border-color: #939393 ">
                                            <option value="0">Chọn quý</option>
                                            <option value="1">Quý I</option>
                                            <option value="2">Quý II</option>
                                            <option value="3">Quý III</option>
                                            <option value="4">Quý IV</option>
                                        </select>
                                    </div>
                                    <input class="btn btn-primary" type="submit" id="btn-filter" value="Lọc" />
                                    <input class="btn btn-primary" type="submit" id="btn-reset" value="Reset" />
                                </div>
                                <div class="dt-buttons btn-group flex-wrap">
                                    <button id="btn-export-excel" class="btn btn-primary" type="button">
                                        <span>Xuất file Excel</span>
                                    </button>
                                </div>
                            </div>
                            <table id="statistics-table" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style='font-size: 1.2em; text-transform:uppercase'>Mã sản phẩm</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Tên sản phẩm</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Đơn giá</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Số lượng sản phẩm bán được</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Tổng doanh thu sản phẩm</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Tỷ lệ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var totalQuantity = 0;
                                        decimal totalRevenue = 0;
                                        decimal totalPercentage = 0;
                                    }
                                    @foreach (var item in OrderDetailBUS.StatisticProduct())
                                    {
                                        <tr>
                                            <td style='font-size: 1.2em;'>@item.ProductID</td>
                                            <td style='font-size: 1.2em;'>@item.ProductName</td>
                                            <td style='font-size: 1.2em;'>@string.Format("{0:N0}", item.Price)</td>
                                            <td style='font-size: 1.2em;'>@item.TotalQuantity</td>
                                            <td style='font-size: 1.2em;'>@string.Format("{0:N0}", item.ProductRevenue)</td>
                                            <td style='font-size: 1.2em;'>@string.Format("{0:0.00}", item.PercentageRevenue) %</td>
                                        </tr>
                                        totalQuantity += item.TotalQuantity;
                                        totalRevenue += item.ProductRevenue;
                                        totalPercentage += item.PercentageRevenue;
                                    }
                                    <tr>
                                        <td colspan='3' style='font-size: 1.2em; font-weight: bold; text-transform: uppercase'>Tổng</td>
                                        <td style='font-size: 1.2em; font-weight: bold;'>@totalQuantity</td>
                                        <td style='font-size: 1.2em; font-weight: bold;'>@string.Format("{0:N0}", totalRevenue)</td>
                                        <td style='font-size: 1.2em; font-weight: bold;'>@string.Format("{0:0.00}", totalPercentage) %</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-lg-6" style="padding:0">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Tổng sản phẩm bán ra</th>
                                        <th style='font-size: 1.2em; text-transform: uppercase'>Tổng doanh thu</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr></tr>
                                    <tr>
                                        <td style='font-size: 1.2em;'>@OrderDetailBUS.SumProduct()</td>
                                        <td style='font-size: 1.2em;'>@string.Format("{0:N0}", OrderBUS.SumAllOrderTotal()) VNĐ</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-12 d-flex flex-row align-items-center" style="margin-bottom:24px">
                            <div class="col-6">
                                <canvas id="productChart" height="180"></canvas>
                            </div>                           
                            <div class="col-6">
                                <canvas id="productChartStock1" height="180"></canvas>
                            </div>
                        </div>
                        <div class="col-12">
                            <canvas id="productChartStock" height="100"></canvas>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div><!-- /.container-fluid -->
</section>
<!-- Thêm SheetJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
<!-- Thêm thư viện Chart.js -->
@*<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>*@
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    document.getElementById("btn-filter").addEventListener("click", function () {
        var year = document.getElementById("year").value;
        var quy = document.getElementById("quy").value;

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProductStatistics", "MainAdmin")",
            data: { year: year, quy: quy },
            success: function (data) {
                var totalQuantity = 0;
                var totalRevenue = 0;
                var totalPercentage = 0;

                $("#statistics-table tbody").empty();

                for (var i = 0; i < data.length; i++) {
                    var row = "<tr>" +
                        "<td style='font-size: 1.2em;'>" + data[i].ProductID + "</td>" +
                        "<td style='font-size: 1.2em;'>" + data[i].ProductName + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].Price).toLocaleString() + "</td>" +
                        "<td style='font-size: 1.2em;'>" + data[i].TotalQuantity + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].ProductRevenue).toLocaleString() + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].PercentageRevenue).toFixed(2) + "%</td>" +
                        "</tr>";

                    totalQuantity += data[i].TotalQuantity;
                    totalRevenue += data[i].ProductRevenue;
                    totalPercentage += parseFloat(data[i].PercentageRevenue);

                    $("#statistics-table tbody").append(row);
                }

                var totalRow = "<tr>" +
                    "<td colspan='3' style='font-size: 1.2em; font-weight: bold;'>Tổng</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalQuantity + "</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalRevenue.toLocaleString() + "</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalPercentage.toFixed(2) + "%</td>" +
                    "</tr>";

                $("#statistics-table tbody").append(totalRow);
                drawChart(data);
                drawChart1(data);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });
    document.getElementById("btn-reset").addEventListener('click', function () {
        location.reload();
    })
    document.getElementById("btn-export-excel").addEventListener("click", function () {
        var table = document.getElementById("statistics-table");
        var sheet = XLSX.utils.table_to_sheet(table);

        var selectedYear = document.getElementById("year").value;
        var selectedQuarter = document.getElementById("quy").value;

        var wb = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, sheet, "Statistics");

        var fileName = "ThongKeDoanhThu_" + selectedYear;
        if (selectedQuarter != 0) {
            fileName += "_Quy_" + selectedQuarter;
        }
        fileName += ".xlsx";

        XLSX.writeFile(wb, fileName);
    });
    function drawChart(data) {
        var ctx = document.getElementById('productChart').getContext('2d');

        var productChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(item => item.ProductName),
                datasets: [
                    {
                        label: 'Tổng doanh thu',
                        data: data.map(item => parseFloat(item.ProductRevenue)),
                        backgroundColor: 'rgba(75, 192, 192, 1)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    },
                ]
            },
            options: {
                layout: {
                    padding: 8
                },
                legend: { display: false },
                title: {
                    display: true,
                    text: "Tổng doanh thu theo sản phẩm",
                    padding: 24,
                    fontSize: 20,
                    fontColor: 'black',
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            fontColor: "black",
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return value.toLocaleString();
                            },
                            fontSize: 14
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            fontColor: "black",
                            fontSize: 14
                        }
                    }]
                },
                plugins: {
                    datalabels: {
                        color: 'black',
                        anchor: 'end',
                        align: 'top',
                        formatter: function (value, context) {
                            return value.toLocaleString() + 'đ';
                        },
                        font: {
                            size: 12,
                        }
                    }
                },
            },
        });
    }
    function drawChart1(data) {
        var ctx = document.getElementById('productChartStock1').getContext('2d');

        var colors = generateColors(data.length);

        var productChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: data.map(item => item.ProductName),
                datasets: [
                    {
                        label: 'Tổng doanh thu',
                        data: data.map(item => parseFloat(item.PercentageRevenue)),
                        backgroundColor: colors,
                        borderColor: colors,
                        borderWidth: 1
                    },
                ]
            },
            options: {
                layout: {
                    padding: 8
                },
                title: {
                    display: true,
                    text: "Tỷ lệ % doanh số theo sản phẩm",
                    padding: 28,
                    fontSize: 20,
                    fontColor: 'black',
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value, index, values) {
                                return value.toFixed(2) + '%';
                            }
                        }
                    }
                },
                plugins: {
                    datalabels: {
                        color: 'black',
                        anchor: 'end',
                        align: 'top',
                        formatter: function (value, context) {
                            return value.toFixed(2) + '%';
                        },
                        font: {
                            size: 16,
                        }
                    }
                },
                legend: {
                    position: 'right',
                    labels: {
                        fontColor: 'black'
                    }
                },
            },
        });
    }

    function generateColors(count) {
        var colors = [];
        for (var i = 0; i < count; i++) {
            var hue = (i * 137.5) % 360;
            colors.push('hsl(' + hue + ', 60%, 60%)'); // Giảm độ đậm và tăng độ sáng
        }
        return colors;
    }



        $(document).ready(function () {
            loadDataAndDrawChart();
            loadStockProductChart();
    });

    // Function to load data and draw chart
    function loadDataAndDrawChart() {
        var year = document.getElementById("year").value;
        var quy = document.getElementById("quy").value;
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProductStatistics", "MainAdmin")",
            data: { year: year, quy: quy },
            success: function (data) {
                var totalQuantity = 0;
                var totalRevenue = 0;
                var totalPercentage = 0;

                $("#statistics-table tbody").empty();

                for (var i = 0; i < data.length; i++) {
                    var row = "<tr>" +
                        "<td style='font-size: 1.2em;'>" + data[i].ProductID + "</td>" +
                        "<td style='font-size: 1.2em;'>" + data[i].ProductName + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].Price).toLocaleString() + "</td>" +
                        "<td style='font-size: 1.2em;'>" + data[i].TotalQuantity + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].ProductRevenue).toLocaleString() + "</td>" +
                        "<td style='font-size: 1.2em;'>" + parseFloat(data[i].PercentageRevenue).toFixed(2) + "%</td>" +
                        "</tr>";

                    totalQuantity += data[i].TotalQuantity;
                    totalRevenue += data[i].ProductRevenue;
                    totalPercentage += parseFloat(data[i].PercentageRevenue);

                    $("#statistics-table tbody").append(row);
                }

                var totalRow = "<tr>" +
                    "<td colspan='3' style='font-size: 1.2em; font-weight: bold;'>Tổng</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalQuantity + "</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalRevenue.toLocaleString() + "</td>" +
                    "<td style='font-size: 1.2em; font-weight: bold;'>" + totalPercentage.toFixed(2) + "%</td>" +
                    "</tr>";

                $("#statistics-table tbody").append(totalRow);
                drawChart(data);
                drawChart1(data);
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
    function loadStockProductChart() {
    $.ajax({
        type: "POST",
        url: "@Url.Action("GetStockProduct", "MainAdmin")",
        success: function (data) {
            drawStockChart(data);
        },
        error: function (error) {
            console.log(error);
        }
    });
    }
    function drawStockChart(data) {
        var ctx = document.getElementById('productChartStock').getContext('2d');
        var productChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(item => item.ProductName),
                datasets: [
                    {
                        label: 'Số lượng tồn kho',
                        data: data.map(item => item.StockNumber),
                        backgroundColor: 'rgba(75, 192, 192, 1)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    },
                ]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                    text: "Số lượng tồn kho",
                    padding: 24,
                    fontSize: 20,
                    fontColor: 'black',
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            fontColor: "black",
                            beginAtZero: true,
                            fontSize: 16,
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            fontColor: "black",
                            fontSize: 14,
                        }
                    }]
                },
                plugins: {
                    datalabels: {
                        color: 'black',
                        anchor: 'end',
                        align: 'top',
                        formatter: function (value, context) {
                            return value.toLocaleString();
                        },
                        font: {
                            size: 15,
                        }
                    }
                },
            }
        });
    }
</script>
