@model PagedList.IPagedList<WebBanBanhConnection.PRODUCT>
@using PagedList.Mvc
@using WebsiteCakeNew.Models.BUS
@{
    string username = (string)Session["UserName"];
    var dbu = new UserBUS();
    int userID = dbu.GetIdByUserName(username);
    var shoppingCart = ShoppingCartBUS.ViewShoppingCartWithUser(userID);
}
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-lg-3 col-md-6 col-sm-6">
            <div class="product__item">
                <div class="product__item__pic set-bg" data-setbg="../../Content/img/shop/@(item.Image)">
                    <div class="product__label">
                        @{
                            var db = new ShopBUS();
                            string cate = db.GetCategoryProduct(item.ProductID);
                            if (cate != string.Empty)
                            {
                                <span>@cate</span>
                            }
                        }
                    </div>
                </div>
                <div class="product__item__text">
                    <h6><a href="@Url.Action("Details", new { id = @item.ProductID})">@item.ProductName</a></h6>
                    @{
                        var formattedPrice = string.Format("{0:N0}", item.Price - item.Price * (DiscountBUS.GetPercentByID(item.Discount) / (float)100));
                    }
                    <div class="product__item__price">@formattedPrice VNĐ</div>
                    <div class="cart_add">
                        @{
                            if (shoppingCart == null)
                            {
                                <a href="@Url.Action("../Account/Login")">Thêm vào giỏ hàng</a>
                            }
                            else
                            {
                                if (CartItemBUS.CheckAddedIt(item.ProductID, shoppingCart.ShoppingCartID) == false)
                                {
                                    <a class="add-to-cart-button"
                                    data-product-id="@item.ProductID"
                                    data-shopping-cart-id="@shoppingCart.ShoppingCartID"
                                    data-quantity="1">
                                        Thêm vào giỏ hàng
                                    </a>
                                }
                                else
                                {
                                    <a class="">
                                        Đã thêm vào giỏ hàng
                                    </a>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }

</div>
<div class="shop__last__option">
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-6">
            <div class="shop__pagination">
                @if (ViewBag.CategoryID != null)
                {
                    @Html.PagedListPager(Model, page => Url.Action("Category", new { id = ViewBag.CategoryID, page, sortBy = ViewBag.SortBy }))
                }
                else
                {
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortBy = ViewBag.SortBy }))
                }
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-6">
            <div class="shop__last__text">
                @{
                    var startProductIndex = (Model.PageNumber - 1) * Model.PageSize + 1;
                    var endProductIndex = startProductIndex + Model.Count - 1;
                }
                <p>Hiển thị @startProductIndex-@endProductIndex trên @Model.TotalItemCount kết quả</p>
            </div>
        </div>
    </div>
</div>
<script>
    function updateProductImages() {
        // Lấy tất cả các phần tử có class "product__item__pic"
        var productItems = document.querySelectorAll('.product__item__pic');

        // Lặp qua từng phần tử và cập nhật đường dẫn hình ảnh
        for (var i = 0; i < productItems.length; i++) {
            var item = productItems[i];
            var imageSource = item.getAttribute('data-setbg');
            item.style.backgroundImage = 'url(' + imageSource + ')';
        }
    }
    updateProductImages();
    var isClickEventAttached = false;

    document.addEventListener("DOMContentLoaded", function () {
        var buttons = document.querySelectorAll(".add-to-cart-button");

        if (!isClickEventAttached) {
            buttons.forEach(function (button) {
                button.addEventListener("click", function () {
                    var productId = this.getAttribute("data-product-id");
                    var shoppingCartId = this.getAttribute("data-shopping-cart-id");
                    var quantity = this.getAttribute("data-quantity");

                    // Make an AJAX request to your server
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "/CartItem/AddToCart", true);
                    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4 && xhr.status === 200) {
                            var response = JSON.parse(xhr.responseText);
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert("Lỗi khi thêm sản phẩm vào giỏ hàng");
                            }
                        }
                    };

                    var data = "productId=" + productId + "&shoppingCartId=" + shoppingCartId + "&quantity=" + quantity;
                    xhr.send(data);
                });
            });

            isClickEventAttached = true;
        }
    });

</script>